#!/usr/bin/env node

'use strict';

// Nodejs libs.
var fs = require('fs');
var path = require('path');

// External libs.
var hooker = require('hooker');

// Get the path to an asset, relative to this module's root directory.
var asset = path.resolve.bind(null, __dirname, '..');

// Project metadata.
var pkg = require(asset('package.json'));

// Grunt.
var grunt = require('grunt');

// Hook into grunt.task.init to load the built-in init task.
hooker.hook(grunt.task, 'init', function() {
  grunt.task.loadTasks(asset('tasks'));
});

if (grunt.cli.tasks.length === 0) {
  // No task was specified on the command line, so run the init task
  // without any arguments.
  grunt.cli.tasks = ['init'];
} else {
  // For the specified "task" prepend "init:" so the init task doesn't
  // actually need to be specified on the command line.
  grunt.cli.tasks = ['init:' + grunt.cli.tasks[0]];
}

// Remove grunt options that don't really make any sense for grunt-init.
['base', 'gruntfile', 'completion', 'npm'].forEach(function(option) {
  delete grunt.cli.optlist[option];
});

// Help methods to run, in-order.
grunt.help.queue = [
  'initOptions',
  'initTemplates',
  'initWidths',
  'header',
  'usage',
  'options',
  'templates',
  'footer',
];

// Header
grunt.help.header = function() {
  grunt.log.writeln('grunt-init: Generate project scaffolding from a template. (v' + pkg.version + ')');
};

// Usage info.
grunt.help.usage = function() {
  grunt.log.header('Usage');
  grunt.log.writeln(' ' + path.basename(process.argv[1]) + ' [options] [template]');
};

// Template listing.
var templates;
grunt.help.initTemplates = function() {
  // Initialize task system so that the templates can be listed.
  grunt.task.init([], {help: true});

  // Valid init templates (.js or .coffee files).
  templates = grunt.task.expandFiles('init/*.{js,coffee}').map(function(fileobj) {
    var name = path.basename(fileobj.abs).replace(/\.(?:js|coffee)/, '');
    var description = require(fileobj.abs).description;
    grunt.help.initCol1(name);
    return [name, description || '(no description)'];
  });
};

grunt.help.templates = function() {
  // grunt.log.header('Available templates');
  grunt.help.table(templates);
  grunt.log.writeln().writeln('A valid init template name must be specified, eg. "grunt-init commonjs".');
};

// Start grunt.
grunt.cli();
